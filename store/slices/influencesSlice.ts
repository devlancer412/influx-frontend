import { createSlice } from '@reduxjs/toolkit';
import type { PayloadAction } from '@reduxjs/toolkit';

type InfluencesState = Influence[];

const initialState: InfluencesState = [
  {
    id: 0,
    campaignId: 0,
    name: 'Alice',
    nickName: 'Influence',
    imageUrl: '/img/user_1.png',
    youtube: 'https://fakeurl/',
    telegram: 'https://fakeurl/',
    twitter: 'https://fakeurl/',
    followers: 22,
    er: 'Good',
    topPrice: 5000,
    bottomPrice: 1000,
    premium: false,
  },
  {
    id: 1,
    campaignId: 0,
    name: 'Bob',
    nickName: 'Influence',
    imageUrl: '/img/user_2.png',
    youtube: 'https://fakeurl/',
    telegram: 'https://fakeurl/',
    twitter: 'https://fakeurl/',
    followers: 22,
    er: 'Good',
    topPrice: 5000,
    bottomPrice: 1000,
    premium: true,
  },
  {
    id: 2,
    campaignId: 0,
    name: 'Vault',
    nickName: 'Influence',
    imageUrl: '/img/user_3.png',
    youtube: 'https://fakeurl/',
    telegram: 'https://fakeurl/',
    twitter: 'https://fakeurl/',
    followers: 22,
    er: 'Good',
    topPrice: 5000,
    bottomPrice: 1000,
    premium: false,
  },
  {
    id: 3,
    campaignId: 0,
    name: 'Alice',
    nickName: 'Influence',
    imageUrl: '/img/user_4.png',
    youtube: 'https://fakeurl/',
    telegram: 'https://fakeurl/',
    twitter: 'https://fakeurl/',
    followers: 22,
    er: 'Good',
    topPrice: 5000,
    bottomPrice: 1000,
    premium: false,
  },
  {
    id: 4,
    campaignId: 0,
    name: 'Bob',
    nickName: 'Influence',
    imageUrl: '/img/user_5.png',
    youtube: 'https://fakeurl/',
    telegram: 'https://fakeurl/',
    twitter: 'https://fakeurl/',
    followers: 22,
    er: 'Good',
    topPrice: 5000,
    bottomPrice: 1000,
    premium: false,
  },
  {
    id: 5,
    campaignId: 0,
    name: 'Vault',
    nickName: 'Influence',
    imageUrl: '/img/user_1.png',
    youtube: 'https://fakeurl/',
    telegram: 'https://fakeurl/',
    twitter: 'https://fakeurl/',
    followers: 22,
    er: 'Good',
    topPrice: 5000,
    bottomPrice: 1000,
    premium: false,
  },
  {
    id: 6,
    campaignId: 0,
    name: 'Alice',
    nickName: 'Influence',
    imageUrl: '/img/user_1.png',
    youtube: 'https://fakeurl/',
    telegram: 'https://fakeurl/',
    twitter: 'https://fakeurl/',
    followers: 22,
    er: 'Good',
    topPrice: 5000,
    bottomPrice: 1000,
    premium: false,
  },
  {
    id: 7,
    campaignId: 0,
    name: 'Bob',
    nickName: 'Influence',
    imageUrl: '/img/user_2.png',
    youtube: 'https://fakeurl/',
    telegram: 'https://fakeurl/',
    twitter: 'https://fakeurl/',
    followers: 22,
    er: 'Good',
    topPrice: 5000,
    bottomPrice: 1000,
    premium: true,
  },
  {
    id: 8,
    campaignId: 0,
    name: 'Vault',
    nickName: 'Influence',
    imageUrl: '/img/user_3.png',
    youtube: 'https://fakeurl/',
    telegram: 'https://fakeurl/',
    twitter: 'https://fakeurl/',
    followers: 22,
    er: 'Good',
    topPrice: 5000,
    bottomPrice: 1000,
    premium: false,
  },
  {
    id: 9,
    campaignId: 0,
    name: 'Alice',
    nickName: 'Influence',
    imageUrl: '/img/user_4.png',
    youtube: 'https://fakeurl/',
    telegram: 'https://fakeurl/',
    twitter: 'https://fakeurl/',
    followers: 22,
    er: 'Good',
    topPrice: 5000,
    bottomPrice: 1000,
    premium: false,
  },
  {
    id: 10,
    campaignId: 0,
    name: 'Bob',
    nickName: 'Influence',
    imageUrl: '/img/user_5.png',
    youtube: 'https://fakeurl/',
    telegram: 'https://fakeurl/',
    twitter: 'https://fakeurl/',
    followers: 22,
    er: 'Good',
    topPrice: 5000,
    bottomPrice: 1000,
    premium: false,
  },
  {
    id: 11,
    campaignId: 0,
    name: 'Vault',
    nickName: 'Influence',
    imageUrl: '/img/user_1.png',
    youtube: 'https://fakeurl/',
    telegram: 'https://fakeurl/',
    twitter: 'https://fakeurl/',
    followers: 22,
    er: 'Good',
    topPrice: 5000,
    bottomPrice: 1000,
    premium: false,
  },
];

const influencesSlice = createSlice({
  name: 'influences',
  initialState,
  reducers: {
    setInfluences: (
      state: InfluencesState,
      action: PayloadAction<Influence[]>
    ): InfluencesState => {
      return action.payload;
    },
  },
});

// Action creators are generated for each case reducer function
export const { setInfluences } = influencesSlice.actions;

export default influencesSlice.reducer;
